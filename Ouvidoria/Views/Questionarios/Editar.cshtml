@model Ouvidoria.Models.Questionario

<h2>Editar</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Formulario</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.id)

        <div class="form-group">
            @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-12">
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-12">

                    <div class="col-md-8">
                        @Html.TextAreaFor(model => model.Descricao, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataInicio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 linhas">
                <div class="col-md-12">
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.DataInicio, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        @Html.ValidationMessageFor(model => model.DataInicio, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DataFim, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10 linhas">
                <div class="col-md-12">
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.DataFim, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        @Html.ValidationMessageFor(model => model.DataFim, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pergunta, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-12" id="div-Perguntas">
                    @for (int i = 0; i < Model.Pergunta.Count; i++)
                    {
                        <div class="linhas" id="Perguntas[@i]" opcoes="@Model.Pergunta[i].Opcao.Count">
                            <div class="row pergunta">
                                <div class="col-md-9">
                                    @Html.HiddenFor(model => model.Pergunta[i].id, new { @class = "hid-id" })
                                    @Html.EditorFor(model => model.Pergunta[i].Descricao, new { htmlAttributes = new { @class = "form-control txt-pergunta" } })
                                </div>
                                <div class="col-md-2">
                                    @Html.EnumDropDownListFor(model => model.Pergunta[i].tipo, new { @class = "form-control ddl-tipo" })
                                </div>
                                @if (i != 0)
                                {
                                    <div class="col-md-1">
                                        <button class="btn btn-danger btn-remover-pergunta" data-id="@Model.Pergunta[i].id">
                                            <span class="glyphicon glyphicon-trash"></span>
                                        </button>
                                    </div>
                                }
                            </div>
                            @for (int j = 0; j < Model.Pergunta[i].Opcao.Count; j++)
                            {
                                int k = j + 1;
                                <div class="row opcoes" data-id="@Model.Pergunta[i].Opcao[j].id">
                                    <div class="col-md-2 text-center">
                                        @Html.HiddenFor(model => model.Pergunta[i].Opcao[j].id, new { @class = "hid-id-opcao" })
                                        <label class="control-label lbl-opcao">Opção @k</label>
                                    </div>
                                    <div class="col-md-5">
                                        @Html.EditorFor(model => model.Pergunta[i].Opcao[j].Descricao, new { htmlAttributes = new { @class = "form-control opcao" } })
                                        @Html.ValidationMessageFor(model => model.Pergunta[i].Opcao[j].Descricao, "", new { @class = "text-danger" })
                                    </div>
                                    @if (j == 1)
                                    {
                                        <div class="col-md-2 text-center">
                                            <button class="btn btn-primary btn-add-opcao">
                                                <span class="glyphicon glyphicon-plus"></span>
                                            </button>
                                        </div>
                                    }
                                    @if (j >= 2)
                                    {
                                        <div class="col-md-2 text-center">
                                            <button class="btn btn-danger btn-remover-opcao" data-id="@Model.Pergunta[i].Opcao[j].id">
                                                <span class="glyphicon glyphicon-trash"></span>
                                            </button>
                                        </div>
                                    }
                                </div>
                            }
                        </div>
                    }
                </div>

                <div class="col-md-4 col-md-offset-4 text-center">
                    <button class="btn btn-primary form-control" id="btn-add-pergunta">Nova Pergunta</button>
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input id="btn-enviar" type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>

    <div hidden="hidden">
        <div id="arrayOpcoes">
        </div>
        <div id="arrayPerguntas">
        </div>
    </div>
}


<template id="template-pergunta">
    <div class="form-group">
        <div class="linhas" id="Pergunta[:index:]" opcoes="2">
            <div class="row pergunta">
                <div class="col-md-9">
                    <input class="form-control txt-pergunta text-box single-line" data-val="true" data-val-maxlength="Tamanho maximo de quinhentos caracteres" data-val-maxlength-max="500"
                           data-val-minlength="Tamanho minimo de cinco caracteres" data-val-minlength-min="5" data-val-required="O campo Descricao é obrigatório." id="Pergunta_:index:__Descricao"
                           name="Pergunta[:index:].Descricao" type="text" value="">
                </div>
                <div class="col-md-2">
                    <select class="form-control ddl-tipo" data-val="true" data-val-required="O campo tipo é obrigatório." id="Pergunta_:index:__tipo" name="Pergunta[:index:].tipo">
                        <option selected="selected" value="0">Dissertativa</option>
                        <option value="1">Objetiva</option>
                    </select>
                </div>
                <div class="col-md-1">
                    <button class="btn btn-danger btn-remover-pergunta">
                        <span class="glyphicon glyphicon-trash"></span>
                    </button>
                </div>
            </div>
        </div>
    </div>
</template>

<template id="template-opcao">
    <div class="row opcoes">
        <div class="col-md-2 text-center">
            <label class="control-label lbl-opcao">Opção 1</label>
        </div>
        <div class="col-md-5">
            <input type="text" name=":id:.Opcao[0].Descricao" placeholder="Opção" class="form-control opcao" />
        </div>
    </div>
    <div class="row opcoes">
        <div class="col-md-2 text-center">
            <label class="control-label lbl-opcao">Opção 2</label>
        </div>
        <div class="col-md-5">
            <input type="text" name=":id:.Opcao[1].Descricao" placeholder="Opção" class="form-control opcao" />
        </div>
        <div class="col-md-2 text-center">
            <button class="btn btn-primary btn-add-opcao">
                <span class="glyphicon glyphicon-plus"></span>
            </button>
        </div>
    </div>
</template>

<template id="template-nova-opcao">
    <div class="row opcoes">
        <div class="col-md-2 text-center">
            <label class="control-label lbl-opcao">Opção :indices:</label>
        </div>
        <div class="col-md-5">
            <input type="text" name=":id:.Opcao[:indice:].Descricao" placeholder="Opção" class="form-control opcao" />
        </div>
        <div class="col-md-2 text-center">
            <button class="btn btn-danger btn-remover-opcao">
                <span class="glyphicon glyphicon-trash"></span>
            </button>
        </div>
    </div>
</template>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script src="~/Scripts/EditarQuestionario.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>
    <script type="text/javascript">
        $(function () {
            $('.datepicker').datepicker();
        });
    </script>
}
